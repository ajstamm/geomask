% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/writeGMlog.R
\name{writeGMlog}
\alias{writeGMlog}
\title{Write the geomasker log}
\usage{
writeGMlog(
  area = NULL,
  maskvars,
  filevars,
  mysettings = NULL,
  settingsfile = NULL
)
}
\arguments{
\item{area}{Spatial layer.}

\item{maskvars}{List of objects needed to calculate masked points. It
contains the numbers min and max, the boolean projection,
and the strings unit, point_id, and bound_id.}

\item{filevars}{List of strings, including the names and paths of
shapefiles to read in and save to, without extensions.}

\item{mysettings}{List of system settings, including version, pkgdate,
starttime, and the booleans kml and exists.}

\item{settingsfile}{R data file (*.Rdata) produced as part of the
geomasker's output. This file saves all settings for
the geomasker. Other options can be set to NULL only if
this option is defined.}
}
\value{
Text file containing all settings used to run the program.
}
\description{
This function writes a log of the geomasking process. It reports the
input and output datasets, variables and settings used, map projection,
and program start and end times.
}
\details{
Notes on using the "settingsfile" option:
\enumerate{
\item You will get an error if you moved the input shapefile before running
the function with this option, since the function needs to access the
input shapefile to recreate the log.
\item Reading in an *.Rdata file from a previous version of the geomasker may
result in incorrect elapsed time and geomasker version numbers being
written to the log, or in errors that cause the log file to be
incomplete, due to changes in settings saved to the *.Rdata file as the
geomasker has evolved.
}
}
\examples{

# if you run this example, it saves "geomasked_points.log" to your working
# directory

if (interactive()) {

maskvars <- list(
  min = 100,
  max = 1000,
  unit = "meters",
  projection = TRUE,
  point_id = "POINTID",
  bound_id = "GEOID10"
)

filevars <- list(
  pointfile = "points",     # original locations file
  pointpath = getwd(),         # original locations path
  boundfile = "tracts",        # original boundary file
  boundpath = getwd(),         # original boundary path
  boundin = paste(getwd(), "tracts", sep = "/"),
  pathout = getwd(),           # save path
  fileout = "geomasked_points" # save file
)

mysettings <- list(
  starttime = Sys.time(),
  version = "1.0",
  pkgdate = format(Sys.Date(), "\%m-\%d-\%Y"),
  endtime = Sys.time() + 250,
  exists = TRUE,
  kml = FALSE
)

ot <- tigris::tracts("NY", "Onondaga", year = 2010)

writeGMlog(
  area = ot,
  filevars = filevars,
  mysettings = mysettings,
  maskvars = maskvars
)
}
}
