% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/writeGMlog.R
\name{writeGMlog}
\alias{writeGMlog}
\title{Write GAT Log}
\usage{
writeGMlog(
  area = NULL,
  maskvars,
  filevars,
  mysettings = NULL,
  settingsfile = NULL
)
}
\arguments{
\item{area}{Spatial layer.}

\item{maskvars}{List of settings for calculating masked locations.}

\item{filevars}{List of file names and paths. Of relevance to this
function are the filename, filein, and the combined save
path and save name, userout.}

\item{mysettings}{List of system settings, including version, pkgdate,
starttime, and the booleans savekml and exists.}

\item{settingsfile}{R data file (*.Rdata) produced as part of GAT's output.
This file saves all settings for GAT. Other options can
be set to NULL only if this option is defined.

Notes on using the settingsfile option:
\enumerate{
\item You will get an error if you moved the input shapefile before running
the function with this option, since the function needs to access the
input shapefile to recreate the log.
\item Reading in an *.Rdata file from a previous version of GAT may result in
incorrect elapsed time and GAT version numbers being written to the log,
or in errors that cause the file to be incomplete, due to changes in
settings saved to the *.Rdata file as GAT has evolved.
}}
}
\description{
This function writes a log of the aggregation process. It reports the
input and output datasets, variables and settings used, distributions of
aggregation variables, map projection, program start and end times, and
any warnings that were generated.
}
\examples{

# if you run this example, it saves "my_hftown.log" to your working
# directory

if (interactive()) {

maskvars <- list(
  min = 100,
  max = 1000,
  unit = "meters",
  projection = TRUE,
  point_id = "POINTID",
  bound_id = "GEOID10"
)

filevars <- list(
  pointfile = "onondaga_landmarkpoints",            # original locations file
  pointpath = paste(getwd(), "testing", sep = "/"), # original locations path
  boundfile = "onondaga_tracts",                    # original boundary file
  boundpath = paste(getwd(), "testing", sep = "/"), # original boundary path
  pathout = paste(getwd(), "testing", sep = "/"),   # save path
  fileout = "geomasked_points"                      # save file
)

mysettings <- list(
  starttime = Sys.time(),
  version = "1.0",
  pkgdate = format(Sys.Date(), "\%m-\%d-\%Y"),
  endtime = Sys.time()
)

writeGATlog(
  area = hftown,
  filevars = filevars,
  mysettings = mysettings,
  maskvars = maskvars
)
}
}
